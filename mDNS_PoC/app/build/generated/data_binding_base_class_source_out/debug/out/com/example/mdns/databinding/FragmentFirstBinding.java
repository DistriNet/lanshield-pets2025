// Generated by view binder compiler. Do not edit!
package com.example.mdns.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mdns.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button buttonStop;

  @NonNull
  public final Button buttonSubmit;

  @NonNull
  public final EditText editTextInput;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final Spinner spinner2;

  private FragmentFirstBinding(@NonNull NestedScrollView rootView, @NonNull Button buttonStop,
      @NonNull Button buttonSubmit, @NonNull EditText editTextInput, @NonNull Spinner spinner,
      @NonNull Spinner spinner2) {
    this.rootView = rootView;
    this.buttonStop = buttonStop;
    this.buttonSubmit = buttonSubmit;
    this.editTextInput = editTextInput;
    this.spinner = spinner;
    this.spinner2 = spinner2;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonStop;
      Button buttonStop = ViewBindings.findChildViewById(rootView, id);
      if (buttonStop == null) {
        break missingId;
      }

      id = R.id.buttonSubmit;
      Button buttonSubmit = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubmit == null) {
        break missingId;
      }

      id = R.id.editTextInput;
      EditText editTextInput = ViewBindings.findChildViewById(rootView, id);
      if (editTextInput == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.spinner2;
      Spinner spinner2 = ViewBindings.findChildViewById(rootView, id);
      if (spinner2 == null) {
        break missingId;
      }

      return new FragmentFirstBinding((NestedScrollView) rootView, buttonStop, buttonSubmit,
          editTextInput, spinner, spinner2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
